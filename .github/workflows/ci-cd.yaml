name: Go CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run go mod tidy
        run: go mod tidy

      - name: Build service
        run: go build -o service

      - name: Build repository
        run: go build -o repository

      - name: Build cmd
        run: go build -o teamdev.exe ./cmd

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            service
            repository
            teamdev.exe

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run tests
        run: go test ./tests/...

  docker:
    name: Deploy
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: [docker]
#    permissions:
#      contents: write
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Download artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: binaries
#          path: ./
#
#      - name: Create Release
#        if: github.event_name == 'push'
#        uses: softprops/action-gh-release@v1
#        with:
#          name: Release ${{ github.sha }}
#          files: |
#            service
#            repository
#            teamdev.exe
#          tag_name: v0.1.${{ github.run_number }}
#          generate_release_notes: true